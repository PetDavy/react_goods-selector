{"version":3,"sources":["data.js","components/Good.js","App.js","index.js"],"names":["goodsFromServer","Good","id","value","selected","handleClick","handleCtrClick","type","className","onClick","event","ctrlKey","App","useState","map","index","items","setItems","showingList","setShowingList","selectedId","selectedItems","filter","item","clickedItem","find","length","join","key","ReactDOM","render","document","getElementById"],"mappings":"6OAAaA,G,MAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WCgBaC,G,MAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,YAAaC,EAArC,EAAqCA,eAArC,OACX,4BACE,4BACEC,KAAK,SACLC,UAAWJ,EAAW,sBAAwB,OAC9CK,QAAS,SAACC,GACJA,EAAMC,QACRL,EAAeJ,GAEfG,EAAYH,KAIfC,EACD,uBAAGK,UAAWJ,EACV,+CACA,gCCoFKQ,EAnGH,WACV,IADgB,EASUC,mBAAmBb,EAPtCc,KAAI,SAACX,EAAOY,GAAR,MAAmB,CAC1Bb,GAAIa,EACJZ,QACAC,UAAU,OALE,mBASTY,EATS,KASFC,EATE,OAUsBJ,mBAAS,IAV/B,mBAUTK,EAVS,KAUIC,EAVJ,KAgBVd,EAAc,SAACe,GACnB,IAAMC,EAJNL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,YAKpBoB,EAAcR,EAAMS,MAAK,SAAAF,GAAI,OAAIA,EAAKrB,KAAOkB,KAE/CC,EAAcK,OAAS,GACzBT,EAASD,EAAMF,KAAI,SAAAS,GAAI,kCAClBA,GADkB,IAErBnB,SAAUmB,EAAKrB,KAAOkB,QAGxBD,EAAe,CAACK,MAEhBP,EAASD,EAAMF,KAAI,SAAAS,GAAI,kCAClBA,GADkB,IAErBnB,SAAUmB,EAAKrB,KAAOkB,IACjBG,EAAKnB,eAIRoB,EAAYpB,SACde,EAAe,IAEfA,EAAe,CAACK,MAKhBlB,EAAiB,SAACc,GACtB,IAAMI,EAAcR,EAAMS,MAAK,SAAAF,GAAI,OAAIA,EAAKrB,KAAOkB,KAE/CI,EAAYpB,SACde,EAAeD,EAAYI,QAAO,SAAAC,GAAI,OAAIA,EAAKrB,KAAOkB,MAEtDD,EAAe,GAAD,mBAAKD,GAAL,CAAkBM,KAGlCP,EAASD,EAAMF,KAAI,SAAAS,GAAI,kCAClBA,GADkB,IAErBnB,SAAUmB,EAAKrB,KAAOkB,GACjBG,EAAKnB,SACNmB,EAAKnB,gBAIb,OACE,yBAAKI,UAAU,OACb,wBAAIA,UAAU,cAAd,2BAGMU,EAAYJ,KAAI,SAAAS,GAAI,OAAIA,EAAKpB,SAAOwB,KAAK,OAK/C,wBAAInB,UAAU,aAEVQ,EAAMF,KAAI,SAAAS,GAAI,OACZ,kBAAC,EAAD,eACEK,IAAKL,EAAKrB,IACNqB,EAFN,CAGElB,YAAaA,EACbC,eAAgBA,SAKxB,4BACEC,KAAK,SACLE,QAAS,WACPQ,EAASD,EAAMF,KAAI,SAAAS,GAAI,kCAClBA,GADkB,IAErBnB,UAAU,QAEZe,EAAe,KAEjBX,UAAU,cAEV,uBAAGA,UAAU,2BC9FrBqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.26dba57e.chunk.js","sourcesContent":["export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Good.scss';\n\nconst Good = ({ id, value, selected, handleClick, handleCtrClick }) => (\n  <li>\n    <button\n      type=\"button\"\n      className={selected ? 'Good Good--selected' : 'Good'}\n      onClick={(event) => {\n        if (event.ctrlKey) {\n          handleCtrClick(id);\n        } else {\n          handleClick(id);\n        }\n      }}\n    >\n      {value}\n      <i className={selected\n        ? 'Good__icon Good__icon--selected fas fa-check'\n        : 'Good__icon fas fa-check'}\n      />\n    </button>\n  </li>\n);\n\nexport default Good;\n\nGood.propTypes = {\n  id: PropTypes.number.isRequired,\n  value: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleCtrClick: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { goodsFromServer } from './data';\nimport Good from './components/Good';\n\nconst App = () => {\n  const fetchData = data => (\n    data.map((value, index) => ({\n      id: index,\n      value,\n      selected: false,\n    }))\n  );\n\n  const [items, setItems] = useState(fetchData(goodsFromServer));\n  const [showingList, setShowingList] = useState([]);\n\n  const getSelectedItems = () => (\n    items.filter(item => item.selected)\n  );\n\n  const handleClick = (selectedId) => {\n    const selectedItems = getSelectedItems();\n    const clickedItem = items.find(item => item.id === selectedId);\n\n    if (selectedItems.length > 1) {\n      setItems(items.map(item => ({\n        ...item,\n        selected: item.id === selectedId,\n      })));\n\n      setShowingList([clickedItem]);\n    } else {\n      setItems(items.map(item => ({\n        ...item,\n        selected: item.id === selectedId\n          ? !item.selected\n          : false,\n      })));\n\n      if (clickedItem.selected) {\n        setShowingList([]);\n      } else {\n        setShowingList([clickedItem]);\n      }\n    }\n  };\n\n  const handleCtrClick = (selectedId) => {\n    const clickedItem = items.find(item => item.id === selectedId);\n\n    if (clickedItem.selected) {\n      setShowingList(showingList.filter(item => item.id !== selectedId));\n    } else {\n      setShowingList([...showingList, clickedItem]);\n    }\n\n    setItems(items.map(item => ({\n      ...item,\n      selected: item.id === selectedId\n        ? !item.selected\n        : item.selected,\n    })));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        {\n          `selected good: - ${\n            showingList.map(item => item.value).join(' ')\n          }`\n        }\n      </h1>\n\n      <ul className=\"App__list\">\n        {\n          items.map(item => (\n            <Good\n              key={item.id}\n              {...item}\n              handleClick={handleClick}\n              handleCtrClick={handleCtrClick}\n            />\n          ))\n        }\n      </ul>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setItems(items.map(item => ({\n            ...item,\n            selected: false,\n          })));\n          setShowingList([]);\n        }}\n        className=\"App__clear\"\n      >\n        <i className=\"far fa-times-circle\" />\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}